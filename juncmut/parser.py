#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Nov 26 10:30:39 2019
@author: Naoko Iida
"""

from .run_juncmut import get_main 
from .run_juncmut import validate_main 
import argparse

#ã€€

def create_parser():

    
    parser = argparse.ArgumentParser(prog = "juncmut")
    
    subparsers = parser.add_subparsers()
    
    #####
    # get
    
    get = subparsers.add_parser("get", help = "Identify the mutation to create the abnormal alternative splicing.")
    
    get.add_argument("-input_file", metavar = "input_file", default = None, type = str,
                       help = "Input file(sample.SJ.out.tab file generated by STAR)")
    
    get.add_argument("-reference", metavar = "reference", default = None, type = str,
                        help = "Path to reference genome")
    
    get.add_argument("-rna_bam", metavar = "rna_bam", default = None, type = str,
                        help = "Path to RNA bam file")
  
    get.add_argument('-control_file', nargs='*', type = str,
                        help = "Path to control data created by merge_control (default: %(default)s)")
    
    get.add_argument("-read_num_thres", type = int, default = 3,
                        help = "Remove splicing junctions whose supporting numbers are below this value (default: %(default)s)")
    
    get.add_argument("-freq_thres", type = float, default = 0.05,
                        help = "Remove splicing junctions whose frequency is below this value (default: %(default)s)")
    
    get.add_argument("-gnomad", metavar = "gnomad", default = None, type = str,
                        help = "Path to gnomad vcf file")
    
    get.set_defaults(func = get_main)
    
    #####
    # validate

    validate = subparsers.add_parser("validate", help = "Validate the mutations on DNA.")
    
    validate.add_argument("-input_file", metavar = "input_file", default = None, type = str,
                       help = "Input file obtained by the juncmut get")
    
    validate.add_argument("-output_file", metavar = "output_file", default = None, type = str,
                       help = "output file. The output file name will be saved in the validate folder.")
    
    validate.add_argument("-reference", metavar = "reference", default = None, type = str,
                        help = "Path to reference genome")
    
    validate.add_argument("-dna_bam", metavar = "dna_bam", default = None, type = str,
                        help = "Path to DNA bam file")
  
    validate.set_defaults(func = validate_main)
    
    #####

    return parser
